{
  "swagger" : "2.0",
  "info" : {
    "description" : "ALPHA - NOT FOR EXTERNAL USE",
    "version" : "v1",
    "title" : "Yugabyte Platform APIs",
    "termsOfService" : "TODO(chirag)",
    "contact" : {
      "name" : "https://docs.yugabyte.com"
    },
    "license" : {
      "name" : "Polyform Free Trial License 1.0.0",
      "url" : "https://github.com/yugabyte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt"
    }
  },
  "host" : "localhost",
  "basePath" : "/",
  "tags" : [ {
    "name" : "Region"
  }, {
    "name" : "Release"
  }, {
    "name" : "AvailabilityZone"
  }, {
    "name" : "Universe"
  }, {
    "name" : "Provider1"
  }, {
    "name" : "RuntimeConfig"
  }, {
    "name" : "Tables"
  }, {
    "name" : "Node Instances"
  }, {
    "name" : "Provider"
  } ],
  "schemes" : [ "http", "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}" : {
      "delete" : {
        "tags" : [ "Region" ],
        "summary" : "delete",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions" : {
      "get" : {
        "tags" : [ "Region" ],
        "summary" : "list Regions for a specific provider",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Region"
              }
            }
          },
          "500" : {
            "description" : "If there was a server or database issue when listing the regions",
            "schema" : {
              "$ref" : "#/definitions/Generic error response from Yugawware Platform API"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Region" ],
        "summary" : "create new region",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "region",
          "description" : "region form data for new region to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RegionFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Region"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/regions" : {
      "get" : {
        "tags" : [ "Region" ],
        "summary" : "list all Regions across all providers",
        "description" : "",
        "operationId" : "listAllRegions",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Region"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/releases/{name}" : {
      "put" : {
        "tags" : [ "Release" ],
        "summary" : "Update release",
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Release",
          "description" : "Release data to be updated",
          "required" : true,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Release Data"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/releases" : {
      "get" : {
        "tags" : [ "Release" ],
        "summary" : "Get list of releases",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "includeMetadata",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Release" ],
        "summary" : "Create release",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Release",
          "description" : "Release data to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReleaseFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponseData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Release" ],
        "summary" : "Refresh release",
        "description" : "",
        "operationId" : "refresh",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyResponseData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones/{azUUID}" : {
      "delete" : {
        "tags" : [ "AvailabilityZone" ],
        "summary" : "deleteAZ",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "azUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones" : {
      "get" : {
        "tags" : [ "AvailabilityZone" ],
        "summary" : "listAZ",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AvailabilityZone"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "AvailabilityZone" ],
        "summary" : "createAZ",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "azFormData",
          "description" : "az form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AvailabilityZoneFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/AvailabilityZone"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/setup_universe_2dc" : {
      "put" : {
        "tags" : [ "Universe" ],
        "summary" : "resetVersion",
        "description" : "",
        "operationId" : "resetVersion",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/set_key" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "setUniverseKey",
        "description" : "",
        "operationId" : "setUniverseKey",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "getUniverse",
        "description" : "",
        "operationId" : "index",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Universe" ],
        "summary" : "updateUniverse",
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Universe task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Universe" ],
        "summary" : "Destroy the universe",
        "description" : "",
        "operationId" : "destroy",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "isForceDelete",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "isDeleteBackups",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/find" : {
      "get" : {
        "tags" : [ "Universe" ],
        "operationId" : "find",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/api/v1/customers/{cUUID}/universes" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "List Universes",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UniverseResp"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Create a YugaByte Universe",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Universe task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/resume" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Resume the universe",
        "description" : "",
        "operationId" : "resume",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universe_configure" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "configure the universe parameters",
        "description" : "This API builds the new universe definition task parameters by merging the input UserIntent with the current taskParams and returns the resulting task parameters in a serialized form",
        "operationId" : "configure",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Universe task"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Upgrade  the universe",
        "description" : "",
        "operationId" : "upgrade",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "upgrade_params",
          "description" : "upgrade params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Universe task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universe_resources" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Api to get the resource estimate for a universe",
        "description" : "Expects UniverseDefinitionTaskParams in request body and calculates the resource estimate for NodeDetailsSet in that.",
        "operationId" : "getUniverseResources",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResourceDetails"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/pause" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Pause the universe",
        "description" : "",
        "operationId" : "pause",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cost" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "universeCost",
        "description" : "",
        "operationId" : "universeCost",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResourceDetails"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/leader" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "getMasterLeaderIP",
        "description" : "",
        "operationId" : "getMasterLeaderIP",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/disk_update" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "updateDiskSize",
        "description" : "",
        "operationId" : "updateDiskSize",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Universe task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/status" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "Status of the Universe",
        "description" : "This will return a Map of node name to its status in json format",
        "operationId" : "status1",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/health_check" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "health Check",
        "description" : "",
        "operationId" : "healthCheck",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/cost" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "list universe cost for all universes",
        "description" : "",
        "operationId" : "universeListCost",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResourceDetails"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/update_backup_state" : {
      "put" : {
        "tags" : [ "Universe" ],
        "summary" : "Set backup Flag for a universe",
        "description" : "",
        "operationId" : "setBackupFlag",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "markActive",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/config_alerts" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Configure Alerts for a universe",
        "description" : "",
        "operationId" : "configureAlerts",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/toggle_tls" : {
      "post" : {
        "tags" : [ "Universe" ],
        "operationId" : "toggleTls",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/run_query" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Run YSQL query against this universe",
        "description" : "Only valid when platform is running in mode is `OSS`",
        "operationId" : "runQuery",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/run_in_shell" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "run command in shell",
        "description" : "This operation is no longer supported due to security reasons",
        "operationId" : "runInShell",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Generic error response from Yugawware Platform API"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/update_db_credentials" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "setDatabaseCredentials",
        "description" : "",
        "operationId" : "setDatabaseCredentials",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/create_db_credentials" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "createUserInDB",
        "description" : "",
        "operationId" : "createUserInDB",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/mark_helm3_compatible" : {
      "put" : {
        "tags" : [ "Universe" ],
        "summary" : "Set the universe as helm3 compatible",
        "description" : "",
        "operationId" : "setHelm3Compatible",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/live_queries" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "getLiveQueries",
        "description" : "",
        "operationId" : "getLiveQueries",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/slow_queries" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "getSlowQueries",
        "description" : "",
        "operationId" : "getSlowQueries",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Universe" ],
        "operationId" : "resetSlowQueries",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/{nodeName}/download_logs" : {
      "get" : {
        "tags" : [ "Universe" ],
        "operationId" : "downloadNodeLogs",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cluster" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "clusterCreate",
        "description" : "",
        "operationId" : "clusterCreate",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Universe task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cluster/{clustUUID}" : {
      "delete" : {
        "tags" : [ "Universe" ],
        "summary" : "clusterDelete",
        "description" : "",
        "operationId" : "clusterDelete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "clustUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "isForceDelete",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers1" : {
      "post" : {
        "tags" : [ "Provider1" ],
        "summary" : "createProvider",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "CreateProviderRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Provider"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers" : {
      "get" : {
        "tags" : [ "Provider1" ],
        "summary" : "listProvider",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Provider"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Provider" ],
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/runtime_config/{scope}/key/{key}" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "getKey",
        "description" : "",
        "operationId" : "getKey",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "setKey",
        "description" : "",
        "operationId" : "setKey",
        "consumes" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "newValue",
          "description" : "new value for config key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "deleteKey",
        "description" : "",
        "operationId" : "deleteKey",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/runtime_config/{scope}" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "listScopes",
        "description" : "Lists all (including empty scopes) runtime config scopes for current customer. List includes the Global scope that spans multiple customers, scope for customer specific overrides for current customer and one scope each for each universe and provider.",
        "operationId" : "getConfig",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "includeInherited",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RuntimeConfigFormData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/runtime_config/mutable_keys" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "listKeys",
        "description" : "List all the mutable runtime config keys",
        "operationId" : "listKeys",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/runtime_config/scopes" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "listScopes",
        "description" : "Lists all (including empty scopes) runtime config scopes for current customer. List includes the Global scope that spans multiple customers, scope for customer specific overrides for current customer and one scope each for each universe and provider.",
        "operationId" : "listScopes",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RuntimeConfigFormData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/tables/{tableUUID}" : {
      "get" : {
        "tags" : [ "Tables" ],
        "summary" : "Describe table",
        "description" : "",
        "operationId" : "describe",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tableUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Tables" ],
        "summary" : "Alter table",
        "description" : "",
        "operationId" : "alter",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tableUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Tables" ],
        "summary" : "Drop table",
        "description" : "",
        "operationId" : "drop",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tableUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/tables" : {
      "get" : {
        "tags" : [ "Tables" ],
        "summary" : "Universe list",
        "description" : "",
        "operationId" : "universeList",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Tables" ],
        "summary" : "Create Table",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Table",
          "description" : "Table data to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Universe task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/tables/{tableUUID}/bulk_import" : {
      "put" : {
        "tags" : [ "Tables" ],
        "summary" : "Bulk import table",
        "description" : "",
        "operationId" : "bulkImport",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tableUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Bulk import",
          "description" : "Bulk data to be Imported",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Bulk import params"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/tables/{tableUUID}/create_backup" : {
      "put" : {
        "tags" : [ "Tables" ],
        "summary" : "Create Multiple table backup",
        "description" : "",
        "operationId" : "createBackup",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tableUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Backup",
          "description" : "Backup data to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Backup Table Params"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/multi_table_backup" : {
      "put" : {
        "tags" : [ "Tables" ],
        "summary" : "Create Multiple table backup",
        "description" : "",
        "operationId" : "createMultiTableBackup",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Table",
          "description" : "Table data to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Multi table backup request params"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/metadata/column_types" : {
      "get" : {
        "tags" : [ "Tables" ],
        "summary" : "Get columns type",
        "description" : "",
        "operationId" : "getColumnTypes",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/features" : {
      "put" : {
        "operationId" : "upsertFeatures",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/metrics" : {
      "post" : {
        "operationId" : "metrics",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}" : {
      "get" : {
        "summary" : "getCustomer",
        "description" : "",
        "operationId" : "index",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          }
        }
      },
      "put" : {
        "operationId" : "update",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "summary" : "deleteCustomer",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        }
      }
    },
    "/api/v1/customers" : {
      "get" : {
        "operationId" : "list",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/host_info" : {
      "get" : {
        "operationId" : "getHostInfo",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/register" : {
      "post" : {
        "operationId" : "register",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/universes/{uniUUID}/proxy/{proxyUrl}" : {
      "get" : {
        "operationId" : "proxyRequest",
        "parameters" : [ {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "proxyUrl",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/logout" : {
      "get" : {
        "operationId" : "logout",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/insecure_login" : {
      "get" : {
        "summary" : "insecureLogin",
        "description" : "",
        "operationId" : "insecure_login",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/v1/platform_config" : {
      "get" : {
        "operationId" : "getPlatformConfig",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/third_party_login" : {
      "get" : {
        "operationId" : "thirdPartyLogin",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/security" : {
      "put" : {
        "operationId" : "set_security",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/logs/{maxLines}" : {
      "get" : {
        "operationId" : "getLogs",
        "parameters" : [ {
          "name" : "maxLines",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/ui_theme" : {
      "get" : {
        "operationId" : "getUITheme",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/login" : {
      "post" : {
        "summary" : "login",
        "description" : "",
        "operationId" : "login",
        "parameters" : [ {
          "in" : "body",
          "name" : "loginFormData",
          "description" : "login form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerLoginFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/api_token" : {
      "put" : {
        "summary" : "apiToken",
        "description" : "",
        "operationId" : "api_token",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/v1/customer_count" : {
      "get" : {
        "operationId" : "customerCount",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/app_version" : {
      "get" : {
        "operationId" : "appVersion",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/nodes/{nodeUUID}/list" : {
      "get" : {
        "tags" : [ "Node Instances" ],
        "summary" : "Get node instance by UUID",
        "description" : "",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "nodeUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NodeInstance"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/zones/{azUUID}/nodes" : {
      "post" : {
        "tags" : [ "Node Instances" ],
        "summary" : "Create node instance",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "azUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Node instance",
          "description" : "Node instance data to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NodeInstanceFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/NodeInstance"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/zones/{azUUID}/nodes/list" : {
      "get" : {
        "tags" : [ "Node Instances" ],
        "summary" : "List of node instances by zone",
        "description" : "",
        "operationId" : "listByZone",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "azUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NodeInstance"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/nodes/list" : {
      "get" : {
        "tags" : [ "Node Instances" ],
        "summary" : "List of node instances by provider",
        "description" : "",
        "operationId" : "listByProvider",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NodeInstance"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/instances/{instanceIP}" : {
      "delete" : {
        "tags" : [ "Node Instances" ],
        "summary" : "Delete node instance by ip",
        "description" : "",
        "operationId" : "deleteInstance",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "instanceIP",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{universeUUID}/nodes/{nodeName}" : {
      "put" : {
        "tags" : [ "Node Instances" ],
        "summary" : "Update node actions",
        "description" : "",
        "operationId" : "nodeAction",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "universeUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Node action",
          "description" : "Node action data to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NodeActionFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{name}" : {
      "get" : {
        "operationId" : "get",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}" : {
      "post" : {
        "summary" : "TODO",
        "description" : "",
        "operationId" : "getClientCert",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates" : {
      "get" : {
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "summary" : "upload",
        "description" : "",
        "operationId" : "upload",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}/download" : {
      "get" : {
        "operationId" : "getRootCert",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}/update_empty_cert" : {
      "post" : {
        "summary" : "update empty certs",
        "description" : "",
        "operationId" : "updateEmptyCustomCert",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CertificateInfo"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/initialize" : {
      "get" : {
        "tags" : [ "Provider" ],
        "summary" : "refreshPricing",
        "description" : "Refresh Provider pricing info",
        "operationId" : "initialize",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/bootstrap" : {
      "post" : {
        "tags" : [ "Provider" ],
        "operationId" : "bootstrap",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/edit" : {
      "put" : {
        "tags" : [ "Provider" ],
        "summary" : "editProvider",
        "description" : "",
        "operationId" : "edit",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "EditProviderFormData",
          "description" : "edit provider form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EditProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Provider"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/kubernetes" : {
      "post" : {
        "tags" : [ "Provider" ],
        "operationId" : "createKubernetes",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/suggested_kubernetes_config" : {
      "get" : {
        "tags" : [ "Provider" ],
        "summary" : "getSuggestedKubernetesConfigs",
        "description" : " Performs discovery of region, zones, pull secret, storageClass when running inside a Kubernetes cluster. Returns the discovered information as a JSON, which is similar to the one which is passed to the createKubernetes method.",
        "operationId" : "getSuggestedKubernetesConfigs",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KubernetesProviderFormData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/import" : {
      "post" : {
        "summary" : "import",
        "description" : "",
        "operationId" : "importUniverse",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "apiKeyAuth" : {
      "description" : "Api key passed as header",
      "type" : "apiKey",
      "name" : "X-AUTH-YW-API-TOKEN",
      "in" : "header"
    }
  },
  "definitions" : {
    "AvailabilityZone" : {
      "type" : "object",
      "required" : [ "active", "code", "kubeconfigPath", "name", "subnet", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "subnet" : {
          "type" : "string"
        },
        "kubeconfigPath" : {
          "type" : "string"
        }
      }
    },
    "Region" : {
      "type" : "object",
      "required" : [ "securityGroupId", "vnetName", "zones" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Region uuid",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "us-west-2",
          "description" : "Cloud provider region code",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "TODO",
          "description" : "Cloud provider region name"
        },
        "ybImage" : {
          "type" : "string",
          "example" : "TODO",
          "description" : "The AMI to be used in this region."
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "example" : -120.01,
          "description" : "Longitude of this region",
          "readOnly" : true
        },
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "example" : 37.22,
          "description" : "Latitude of this region",
          "readOnly" : true
        },
        "zones" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/AvailabilityZone"
          }
        },
        "securityGroupId" : {
          "type" : "string"
        },
        "vnetName" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "Region within a given provider. Typically this will map to a single cloud provider region"
    },
    "RegionFormData" : {
      "type" : "object",
      "required" : [ "code", "destVpcId", "hostVpcId", "hostVpcRegion", "latitude", "longitude", "name", "ybImage" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "ybImage" : {
          "type" : "string"
        },
        "hostVpcRegion" : {
          "type" : "string"
        },
        "hostVpcId" : {
          "type" : "string"
        },
        "destVpcId" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Generic error response from Yugawware Platform API" : {
      "type" : "object",
      "required" : [ "success" ],
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "error" : {
          "type" : "string",
          "example" : "There was a problem creating universe",
          "description" : "User visible unstructurred error message"
        }
      }
    },
    "Release Data" : {
      "type" : "object",
      "properties" : {
        "state" : {
          "type" : "string",
          "example" : "ACTIVE",
          "description" : "Release state",
          "enum" : [ "ACTIVE", "DISABLED", "DELETED" ]
        },
        "notes" : {
          "type" : "array",
          "description" : "Release notes",
          "items" : {
            "type" : "string"
          }
        },
        "filePath" : {
          "type" : "string",
          "description" : "Release File path"
        },
        "imageTag" : {
          "type" : "string",
          "description" : "Release image tag"
        }
      },
      "description" : "Release Data"
    },
    "EmptyResponseData" : {
      "type" : "object",
      "required" : [ "success" ],
      "properties" : {
        "success" : {
          "type" : "boolean"
        }
      }
    },
    "ReleaseFormData" : {
      "type" : "object",
      "required" : [ "version" ],
      "properties" : {
        "version" : {
          "type" : "string"
        }
      }
    },
    "AvailabilityZoneData" : {
      "type" : "object",
      "required" : [ "code", "name", "subnet" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "subnet" : {
          "type" : "string"
        }
      }
    },
    "AvailabilityZoneFormData" : {
      "type" : "object",
      "required" : [ "availabilityZones" ],
      "properties" : {
        "availabilityZones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AvailabilityZoneData"
          }
        }
      }
    },
    "YWSuccess" : {
      "type" : "object",
      "required" : [ "message", "success" ],
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Cloud specific info" : {
      "type" : "object",
      "properties" : {
        "private_ip" : {
          "type" : "string",
          "description" : "Private IP"
        },
        "public_ip" : {
          "type" : "string",
          "description" : "Public IP"
        },
        "public_dns" : {
          "type" : "string",
          "description" : "Public DNS"
        },
        "private_dns" : {
          "type" : "string",
          "description" : "Private DNS"
        },
        "instance_type" : {
          "type" : "string",
          "description" : "Instance type"
        },
        "subnet_id" : {
          "type" : "string",
          "description" : "Subnet IP"
        },
        "az" : {
          "type" : "string",
          "description" : "AZ"
        },
        "region" : {
          "type" : "string",
          "description" : "Region"
        },
        "cloud" : {
          "type" : "string",
          "description" : "Cloud"
        },
        "assignPublicIP" : {
          "type" : "boolean",
          "description" : "Public IP assigned"
        },
        "useTimeSync" : {
          "type" : "boolean",
          "description" : "Is use time sync enable"
        },
        "mount_roots" : {
          "type" : "string",
          "description" : "Mount roots"
        }
      },
      "description" : "Cloud specific information"
    },
    "Cluster" : {
      "type" : "object",
      "required" : [ "clusterType", "index", "placementInfo", "userIntent", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "clusterType" : {
          "type" : "string",
          "enum" : [ "PRIMARY", "ASYNC" ]
        },
        "userIntent" : {
          "$ref" : "#/definitions/UserIntent"
        },
        "placementInfo" : {
          "$ref" : "#/definitions/PlacementInfo"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "regions" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Region"
          }
        }
      }
    },
    "Communication ports" : {
      "type" : "object",
      "properties" : {
        "masterHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP port for master table"
        },
        "masterRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "RCP port for master table"
        },
        "tserverHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP port for tserver"
        },
        "tserverRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "RPC port for tserver"
        },
        "redisServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP port for redis"
        },
        "redisServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "RPC port for redis"
        },
        "yqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP port for yql"
        },
        "yqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "RPC port for yql"
        },
        "ysqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP port for ysql"
        },
        "ysqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "RPC port for ysql"
        },
        "nodeExporterPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Node exporter port"
        }
      },
      "description" : "Communication ports"
    },
    "Device info" : {
      "type" : "object",
      "properties" : {
        "volumeSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "he size of each volume in each instance"
        },
        "numVolumes" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of volumes to be mounted on this instance at the default path"
        },
        "diskIops" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Desired Iops for the volumes mounted on this instance"
        },
        "throughput" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Desired throughput for the volumes mounted on this instance"
        },
        "storageClass" : {
          "type" : "string",
          "description" : "Name of storage class"
        },
        "mountPoints" : {
          "type" : "string",
          "description" : "omma separated list of mount points for the devices in each instance"
        },
        "storageType" : {
          "type" : "string",
          "description" : "The type of storage used for this instance",
          "enum" : [ "IO1", "GP2", "GP3", "Scratch", "Persistent", "StandardSSD_LRS", "Premium_LRS", "UltraSSD_LRS" ]
        }
      },
      "description" : "Device information"
    },
    "Encryption at rest config" : {
      "type" : "object",
      "properties" : {
        "encryptionAtRestEnabled" : {
          "type" : "boolean",
          "description" : "Whether a universe is currently encrypted at rest or not"
        },
        "kmsConfigUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "KMS configuration"
        },
        "opType" : {
          "type" : "string",
          "description" : "Whether to enable/disable/rotate universe key/encryption at rest",
          "enum" : [ "ENABLE", "DISABLE", "UNDEFINED" ]
        },
        "type" : {
          "type" : "string",
          "description" : "Whether to generate a data key or just retrieve the CMK arn",
          "enum" : [ "CMK", "DATA_KEY" ]
        }
      },
      "description" : "Encryption at rest config"
    },
    "Extra dependencies" : {
      "type" : "object",
      "properties" : {
        "installNodeExporter" : {
          "type" : "boolean",
          "description" : "Is install node exporter required"
        }
      },
      "description" : "Extra dependencies"
    },
    "Node details" : {
      "type" : "object",
      "properties" : {
        "nodeIdx" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Node id"
        },
        "nodeName" : {
          "type" : "string",
          "description" : "Node name"
        },
        "nodeUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Node UUID"
        },
        "cloudInfo" : {
          "description" : "Cloud information",
          "$ref" : "#/definitions/Cloud specific info"
        },
        "azUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Az UUID"
        },
        "placementUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Placement UUID"
        },
        "machineImage" : {
          "type" : "string",
          "description" : "Machine image"
        },
        "state" : {
          "type" : "string",
          "description" : "Node state",
          "enum" : [ "ToBeAdded", "ToJoinCluster", "Provisioned", "SoftwareInstalled", "UpgradeSoftware", "UpdateGFlags", "Live", "Stopping", "Starting", "Stopped", "Unreachable", "ToBeRemoved", "Removing", "Removed", "Adding", "BeingDecommissioned", "Decommissioned", "UpdateCert", "ToggleTls" ]
        },
        "isMaster" : {
          "type" : "boolean",
          "description" : "True if this node is a master"
        },
        "masterHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Master HTTP port"
        },
        "masterRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Master RCP port"
        },
        "isTserver" : {
          "type" : "boolean",
          "description" : "True if this node is a tserver"
        },
        "tserverHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Tserver HTTP port"
        },
        "tserverRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Tserver RPC port"
        },
        "isRedisServer" : {
          "type" : "boolean",
          "description" : "True if this node is a redis server"
        },
        "redisServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Redis HTTP port"
        },
        "redisServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Redis RPC port"
        },
        "isYqlServer" : {
          "type" : "boolean",
          "description" : "True if this node is a Yql"
        },
        "yqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Yql HTTP port"
        },
        "yqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Yql RPC port"
        },
        "isYsqlServer" : {
          "type" : "boolean",
          "description" : "True if this node is a Ysql"
        },
        "ysqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Ysql HTTP port"
        },
        "ysqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Ysql RPC port"
        },
        "nodeExporterPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Node exporter port"
        },
        "cronsActive" : {
          "type" : "boolean",
          "description" : "True if cronjobs were properly configured for this node"
        }
      },
      "description" : "Node details"
    },
    "NodeDetailsResp" : {
      "type" : "object",
      "properties" : {
        "nodeIdx" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Node id"
        },
        "nodeName" : {
          "type" : "string",
          "description" : "Node name"
        },
        "nodeUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Node UUID"
        },
        "cloudInfo" : {
          "description" : "Cloud information",
          "$ref" : "#/definitions/Cloud specific info"
        },
        "azUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Az UUID"
        },
        "placementUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Placement UUID"
        },
        "machineImage" : {
          "type" : "string",
          "description" : "Machine image"
        },
        "state" : {
          "type" : "string",
          "description" : "Node state",
          "enum" : [ "ToBeAdded", "ToJoinCluster", "Provisioned", "SoftwareInstalled", "UpgradeSoftware", "UpdateGFlags", "Live", "Stopping", "Starting", "Stopped", "Unreachable", "ToBeRemoved", "Removing", "Removed", "Adding", "BeingDecommissioned", "Decommissioned", "UpdateCert", "ToggleTls" ]
        },
        "isMaster" : {
          "type" : "boolean",
          "description" : "True if this node is a master"
        },
        "masterHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Master HTTP port"
        },
        "masterRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Master RCP port"
        },
        "isTserver" : {
          "type" : "boolean",
          "description" : "True if this node is a tserver"
        },
        "tserverHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Tserver HTTP port"
        },
        "tserverRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Tserver RPC port"
        },
        "isRedisServer" : {
          "type" : "boolean",
          "description" : "True if this node is a redis server"
        },
        "redisServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Redis HTTP port"
        },
        "redisServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Redis RPC port"
        },
        "isYqlServer" : {
          "type" : "boolean",
          "description" : "True if this node is a Yql"
        },
        "yqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Yql HTTP port"
        },
        "yqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Yql RPC port"
        },
        "isYsqlServer" : {
          "type" : "boolean",
          "description" : "True if this node is a Ysql"
        },
        "ysqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Ysql HTTP port"
        },
        "ysqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Ysql RPC port"
        },
        "nodeExporterPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Node exporter port"
        },
        "cronsActive" : {
          "type" : "boolean",
          "description" : "True if cronjobs were properly configured for this node"
        },
        "allowedActions" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "ADD", "REMOVE", "START", "STOP", "DELETE", "QUERY", "RELEASE", "START_MASTER" ]
          }
        }
      }
    },
    "PlacementAZ" : {
      "type" : "object",
      "required" : [ "isAffinitized", "name", "numNodesInAZ", "replicationFactor", "subnet", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "replicationFactor" : {
          "type" : "integer",
          "format" : "int32"
        },
        "subnet" : {
          "type" : "string"
        },
        "numNodesInAZ" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isAffinitized" : {
          "type" : "boolean"
        }
      }
    },
    "PlacementCloud" : {
      "type" : "object",
      "required" : [ "code", "regionList", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "code" : {
          "type" : "string"
        },
        "regionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlacementRegion"
          }
        }
      }
    },
    "PlacementInfo" : {
      "type" : "object",
      "required" : [ "cloudList" ],
      "properties" : {
        "cloudList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlacementCloud"
          }
        }
      }
    },
    "PlacementRegion" : {
      "type" : "object",
      "required" : [ "azList", "code", "name", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "azList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlacementAZ"
          }
        }
      }
    },
    "Universe task" : {
      "type" : "object",
      "required" : [ "tableDetails", "tableType", "tableUUID" ],
      "properties" : {
        "errorString" : {
          "type" : "string",
          "description" : "Error message"
        },
        "nodeExporterUser" : {
          "type" : "string",
          "description" : "Node exporter user"
        },
        "deviceInfo" : {
          "description" : "Device information",
          "$ref" : "#/definitions/Device info"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Associate universe UUID"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Universe version"
        },
        "cmkArn" : {
          "type" : "string",
          "description" : "Amazon Resource Name (ARN) of the CMK"
        },
        "encryptionAtRestConfig" : {
          "description" : "Encryption at rest configation",
          "$ref" : "#/definitions/Encryption at rest config"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "description" : "Node details",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Node details"
          }
        },
        "communicationPorts" : {
          "description" : "Communication ports",
          "$ref" : "#/definitions/Communication ports"
        },
        "extraDependencies" : {
          "description" : "Extra dependencies",
          "$ref" : "#/definitions/Extra dependencies"
        },
        "firstTry" : {
          "type" : "boolean",
          "description" : "Whether this task has been tried before or not"
        },
        "tableUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "tableType" : {
          "type" : "string",
          "enum" : [ "YQL_TABLE_TYPE", "REDIS_TABLE_TYPE", "PGSQL_TABLE_TYPE", "TRANSACTION_STATUS_TABLE_TYPE" ]
        },
        "tableDetails" : {
          "$ref" : "#/definitions/Table details"
        }
      },
      "description" : "Universe task"
    },
    "UniverseDefinitionTaskParamsResp" : {
      "type" : "object",
      "required" : [ "allowInsecure", "backupInProgress", "capability", "clientRootCA", "clusters", "currentClusterType", "importedState", "itestS3PackagePath", "nextClusterIndex", "nodePrefix", "remotePackagePath", "resetAZConfig", "rootAndClientRootCASame", "rootCA", "setTxnTableWaitCountFlag", "universePaused", "updateInProgress", "updateSucceeded", "userAZSelected" ],
      "properties" : {
        "errorString" : {
          "type" : "string",
          "description" : "Error message"
        },
        "nodeExporterUser" : {
          "type" : "string",
          "description" : "Node exporter user"
        },
        "deviceInfo" : {
          "description" : "Device information",
          "$ref" : "#/definitions/Device info"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Associate universe UUID"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Universe version"
        },
        "cmkArn" : {
          "type" : "string",
          "description" : "Amazon Resource Name (ARN) of the CMK"
        },
        "encryptionAtRestConfig" : {
          "description" : "Encryption at rest configation",
          "$ref" : "#/definitions/Encryption at rest config"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/NodeDetailsResp"
          }
        },
        "communicationPorts" : {
          "description" : "Communication ports",
          "$ref" : "#/definitions/Communication ports"
        },
        "extraDependencies" : {
          "description" : "Extra dependencies",
          "$ref" : "#/definitions/Extra dependencies"
        },
        "firstTry" : {
          "type" : "boolean",
          "description" : "Whether this task has been tried before or not"
        },
        "clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Cluster"
          }
        },
        "currentClusterType" : {
          "type" : "string",
          "enum" : [ "PRIMARY", "ASYNC" ]
        },
        "nodePrefix" : {
          "type" : "string"
        },
        "rootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "clientRootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "rootAndClientRootCASame" : {
          "type" : "boolean"
        },
        "userAZSelected" : {
          "type" : "boolean"
        },
        "resetAZConfig" : {
          "type" : "boolean"
        },
        "updateInProgress" : {
          "type" : "boolean"
        },
        "backupInProgress" : {
          "type" : "boolean"
        },
        "updateSucceeded" : {
          "type" : "boolean"
        },
        "universePaused" : {
          "type" : "boolean"
        },
        "nextClusterIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allowInsecure" : {
          "type" : "boolean"
        },
        "setTxnTableWaitCountFlag" : {
          "type" : "boolean"
        },
        "itestS3PackagePath" : {
          "type" : "string"
        },
        "remotePackagePath" : {
          "type" : "string"
        },
        "importedState" : {
          "type" : "string",
          "enum" : [ "NONE", "STARTED", "MASTERS_ADDED", "TSERVERS_ADDED", "IMPORTED" ]
        },
        "capability" : {
          "type" : "string",
          "enum" : [ "READ_ONLY", "EDITS_ALLOWED" ]
        }
      }
    },
    "UniverseResourceDetails" : {
      "type" : "object",
      "required" : [ "azList", "ebsPricePerHour", "gp3FreePiops", "gp3FreeThroughput", "memSizeGB", "numCores", "numNodes", "pricePerHour", "volumeCount", "volumeSizeGB" ],
      "properties" : {
        "pricePerHour" : {
          "type" : "number",
          "format" : "double"
        },
        "ebsPricePerHour" : {
          "type" : "number",
          "format" : "double"
        },
        "numCores" : {
          "type" : "number",
          "format" : "double"
        },
        "memSizeGB" : {
          "type" : "number",
          "format" : "double"
        },
        "volumeCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "volumeSizeGB" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numNodes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gp3FreePiops" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gp3FreeThroughput" : {
          "type" : "integer",
          "format" : "int32"
        },
        "azList" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "UniverseResp" : {
      "type" : "object",
      "required" : [ "creationDate", "dnsName", "name", "pricePerHour", "resources", "sampleAppCommandTxt", "taskUUID", "universeConfig", "universeDetails", "universeUUID", "version" ],
      "properties" : {
        "universeUUID" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dnsName" : {
          "type" : "string"
        },
        "resources" : {
          "$ref" : "#/definitions/UniverseResourceDetails"
        },
        "universeDetails" : {
          "$ref" : "#/definitions/UniverseDefinitionTaskParamsResp"
        },
        "universeConfig" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "taskUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "sampleAppCommandTxt" : {
          "type" : "string"
        },
        "pricePerHour" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "UserIntent" : {
      "type" : "object",
      "required" : [ "accessKeyCode", "assignPublicIP", "awsArnString", "deviceInfo", "enableClientToNodeEncrypt", "enableExposingService", "enableIPV6", "enableNodeToNodeEncrypt", "enableVolumeEncryption", "enableYEDIS", "enableYSQL", "instanceTags", "instanceType", "masterGFlags", "numNodes", "preferredRegion", "provider", "providerType", "regionList", "replicationFactor", "tserverGFlags", "universeName", "useHostname", "useTimeSync", "ybSoftwareVersion" ],
      "properties" : {
        "universeName" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "providerType" : {
          "type" : "string",
          "enum" : [ "unknown", "aws", "gcp", "azu", "docker", "onprem", "kubernetes", "local", "other" ]
        },
        "replicationFactor" : {
          "type" : "integer",
          "format" : "int32"
        },
        "regionList" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "preferredRegion" : {
          "type" : "string",
          "format" : "uuid"
        },
        "instanceType" : {
          "type" : "string"
        },
        "numNodes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ybSoftwareVersion" : {
          "type" : "string"
        },
        "accessKeyCode" : {
          "type" : "string"
        },
        "deviceInfo" : {
          "$ref" : "#/definitions/Device info"
        },
        "assignPublicIP" : {
          "type" : "boolean"
        },
        "useTimeSync" : {
          "type" : "boolean"
        },
        "enableYSQL" : {
          "type" : "boolean"
        },
        "enableYEDIS" : {
          "type" : "boolean"
        },
        "enableNodeToNodeEncrypt" : {
          "type" : "boolean"
        },
        "enableClientToNodeEncrypt" : {
          "type" : "boolean"
        },
        "enableVolumeEncryption" : {
          "type" : "boolean"
        },
        "enableIPV6" : {
          "type" : "boolean"
        },
        "enableExposingService" : {
          "type" : "string",
          "enum" : [ "NONE", "EXPOSED", "UNEXPOSED" ]
        },
        "awsArnString" : {
          "type" : "string"
        },
        "useHostname" : {
          "type" : "boolean"
        },
        "masterGFlags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tserverGFlags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "instanceTags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "YWTask" : {
      "type" : "object",
      "required" : [ "taskUUID" ],
      "properties" : {
        "taskUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "resourceUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "UUID of the resource being modified  by the task",
          "readOnly" : true
        }
      }
    },
    "Provider" : {
      "type" : "object",
      "required" : [ "hostedZoneId", "hostedZoneName", "regions" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Provide uuid",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "description" : "Cloud Provider code"
        },
        "name" : {
          "type" : "string",
          "description" : "Cloud Provider code"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Cloud Provider code",
          "readOnly" : true
        },
        "customerUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Cloud Provider code",
          "readOnly" : true
        },
        "regions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Region"
          }
        },
        "keyPairName" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "sshPrivateKeyContent" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "sshUser" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "airGapInstall" : {
          "type" : "boolean",
          "description" : "Transient property - only present in mutate API request"
        },
        "sshPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Transient property - only present in mutate API request"
        },
        "hostVpcId" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "hostVpcRegion" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "customHostCidrs" : {
          "type" : "array",
          "description" : "Transient property - only present in mutate API request",
          "items" : {
            "type" : "string"
          }
        },
        "destVpcId" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "hostedZoneName" : {
          "type" : "string"
        },
        "hostedZoneId" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ConfigEntry" : {
      "type" : "object",
      "required" : [ "inherited", "key", "value" ],
      "properties" : {
        "inherited" : {
          "type" : "boolean"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "RuntimeConfigFormData" : {
      "type" : "object",
      "required" : [ "scopedConfigList" ],
      "properties" : {
        "scopedConfigList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScopedConfig"
          }
        }
      }
    },
    "ScopedConfig" : {
      "type" : "object",
      "required" : [ "configEntries", "mutableScope", "type", "uuid" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "GLOBAL", "CUSTOMER", "UNIVERSE", "PROVIDER" ]
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "mutableScope" : {
          "type" : "boolean"
        },
        "configEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigEntry"
          }
        }
      }
    },
    "Column details" : {
      "type" : "object",
      "properties" : {
        "columnOrder" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Column order"
        },
        "name" : {
          "type" : "string",
          "description" : "Column name"
        },
        "type" : {
          "type" : "string",
          "description" : "Column type",
          "enum" : [ "TINYINT", "SMALLINT", "INT", "BIGINT", "VARCHAR", "BOOLEAN", "FLOAT", "DOUBLE_PRECISION", "BLOB", "TIMESTAMP", "DECIMAL", "VARINT", "INET", "LIST", "MAP", "SET", "UUID", "TIMEUUID", "FROZEN", "DATE", "TIME", "JSONB", "USER_DEFINED_TYPE" ]
        },
        "keyType" : {
          "type" : "string",
          "description" : "Column key type",
          "enum" : [ "TINYINT", "SMALLINT", "INT", "BIGINT", "VARCHAR", "BOOLEAN", "FLOAT", "DOUBLE_PRECISION", "BLOB", "TIMESTAMP", "DECIMAL", "VARINT", "INET", "LIST", "MAP", "SET", "UUID", "TIMEUUID", "FROZEN", "DATE", "TIME", "JSONB", "USER_DEFINED_TYPE" ]
        },
        "valueType" : {
          "type" : "string",
          "description" : "Column value name",
          "enum" : [ "TINYINT", "SMALLINT", "INT", "BIGINT", "VARCHAR", "BOOLEAN", "FLOAT", "DOUBLE_PRECISION", "BLOB", "TIMESTAMP", "DECIMAL", "VARINT", "INET", "LIST", "MAP", "SET", "UUID", "TIMEUUID", "FROZEN", "DATE", "TIME", "JSONB", "USER_DEFINED_TYPE" ]
        },
        "isPartitionKey" : {
          "type" : "boolean",
          "description" : "True if this column is a partition key"
        },
        "isClusteringKey" : {
          "type" : "boolean",
          "description" : "True if this column is a clustering key"
        },
        "sortOrder" : {
          "type" : "string",
          "description" : "SortOrder for this column",
          "enum" : [ "NONE", "ASC", "DESC" ]
        }
      },
      "description" : "Column details"
    },
    "Table details" : {
      "type" : "object",
      "properties" : {
        "tableName" : {
          "type" : "string",
          "description" : "Table name"
        },
        "keyspace" : {
          "type" : "string",
          "description" : "Keyspace that this table belongs to"
        },
        "ttlInSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The default table-level time to live"
        },
        "columns" : {
          "type" : "array",
          "description" : "Details of the columns that make up the table",
          "items" : {
            "$ref" : "#/definitions/Column details"
          }
        },
        "cqlcreateKeyspaceString" : {
          "type" : "string",
          "description" : "CQL create keyspace detail"
        },
        "cqluseKeyspaceString" : {
          "type" : "string",
          "description" : "CQL use keyspace detail"
        },
        "cqlcreateTableString" : {
          "type" : "string",
          "description" : "CQL create table detail"
        }
      },
      "description" : "Table details"
    },
    "Bulk import params" : {
      "type" : "object",
      "properties" : {
        "errorString" : {
          "type" : "string",
          "description" : "Error message"
        },
        "nodeExporterUser" : {
          "type" : "string",
          "description" : "Node exporter user"
        },
        "deviceInfo" : {
          "description" : "Device information",
          "$ref" : "#/definitions/Device info"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Associate universe UUID"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Universe version"
        },
        "cmkArn" : {
          "type" : "string",
          "description" : "Amazon Resource Name (ARN) of the CMK"
        },
        "encryptionAtRestConfig" : {
          "description" : "Encryption at rest configation",
          "$ref" : "#/definitions/Encryption at rest config"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "description" : "Node details",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Node details"
          }
        },
        "communicationPorts" : {
          "description" : "Communication ports",
          "$ref" : "#/definitions/Communication ports"
        },
        "extraDependencies" : {
          "description" : "Extra dependencies",
          "$ref" : "#/definitions/Extra dependencies"
        },
        "firstTry" : {
          "type" : "boolean",
          "description" : "Whether this task has been tried before or not"
        },
        "keyspace" : {
          "type" : "string",
          "description" : "Key space"
        },
        "tableName" : {
          "type" : "string",
          "description" : "Table name"
        },
        "tableUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Table UUID"
        },
        "sse" : {
          "type" : "boolean",
          "description" : "Is SSE"
        },
        "s3Bucket" : {
          "type" : "string",
          "description" : "S3 bucket URL"
        },
        "instanceCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Instance count"
        }
      },
      "description" : "Bulk import params"
    },
    "Backup Table Params" : {
      "type" : "object",
      "properties" : {
        "errorString" : {
          "type" : "string",
          "description" : "Error message"
        },
        "nodeExporterUser" : {
          "type" : "string",
          "description" : "Node exporter user"
        },
        "deviceInfo" : {
          "description" : "Device information",
          "$ref" : "#/definitions/Device info"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Associate universe UUID"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Universe version"
        },
        "cmkArn" : {
          "type" : "string",
          "description" : "Amazon Resource Name (ARN) of the CMK"
        },
        "encryptionAtRestConfig" : {
          "description" : "Encryption at rest configation",
          "$ref" : "#/definitions/Encryption at rest config"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "description" : "Node details",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Node details"
          }
        },
        "communicationPorts" : {
          "description" : "Communication ports",
          "$ref" : "#/definitions/Communication ports"
        },
        "extraDependencies" : {
          "description" : "Extra dependencies",
          "$ref" : "#/definitions/Extra dependencies"
        },
        "firstTry" : {
          "type" : "boolean",
          "description" : "Whether this task has been tried before or not"
        },
        "keyspace" : {
          "type" : "string",
          "description" : "Key space"
        },
        "tableName" : {
          "type" : "string",
          "description" : "Table name"
        },
        "tableUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Table UUID"
        },
        "sse" : {
          "type" : "boolean",
          "description" : "Is SSE"
        },
        "storageConfigUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Storage config uuid"
        },
        "kmsConfigUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "KMS config uuid"
        },
        "storageLocation" : {
          "type" : "string",
          "description" : "Storage location"
        },
        "actionType" : {
          "type" : "string",
          "description" : "Action type",
          "enum" : [ "CREATE", "RESTORE", "RESTORE_KEYS", "DELETE" ]
        },
        "backupType" : {
          "type" : "string",
          "description" : "Backup type",
          "enum" : [ "YQL_TABLE_TYPE", "REDIS_TABLE_TYPE", "PGSQL_TABLE_TYPE", "TRANSACTION_STATUS_TABLE_TYPE" ]
        },
        "tableNameList" : {
          "type" : "array",
          "description" : "Tables",
          "items" : {
            "type" : "string"
          }
        },
        "tableUUIDList" : {
          "type" : "array",
          "description" : "Tables UUID's",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "backupList" : {
          "type" : "array",
          "description" : "Backups",
          "items" : {
            "$ref" : "#/definitions/Backup Table Params"
          }
        },
        "schedulingFrequency" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Frequency for running the backup in milliseconds"
        },
        "cronExpression" : {
          "type" : "string",
          "description" : "Cron expression in case a recurring backup"
        },
        "timeBeforeDelete" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time in millisecs before deleting the backup from the storage"
        },
        "enableVerboseLogs" : {
          "type" : "boolean",
          "description" : "Is verbose logging is enable"
        },
        "transactionalBackup" : {
          "type" : "boolean",
          "description" : "Is backup be transactional across tables"
        },
        "parallelism" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of concurrent commands to run on nodes over SSH"
        },
        "scheduleUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Schedule UUID"
        }
      },
      "description" : "Backup Table Params"
    },
    "Multi table backup request params" : {
      "type" : "object",
      "properties" : {
        "errorString" : {
          "type" : "string",
          "description" : "Error message"
        },
        "nodeExporterUser" : {
          "type" : "string",
          "description" : "Node exporter user"
        },
        "deviceInfo" : {
          "description" : "Device information",
          "$ref" : "#/definitions/Device info"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Associate universe UUID"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Universe version"
        },
        "cmkArn" : {
          "type" : "string",
          "description" : "Amazon Resource Name (ARN) of the CMK"
        },
        "encryptionAtRestConfig" : {
          "description" : "Encryption at rest configation",
          "$ref" : "#/definitions/Encryption at rest config"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "description" : "Node details",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Node details"
          }
        },
        "communicationPorts" : {
          "description" : "Communication ports",
          "$ref" : "#/definitions/Communication ports"
        },
        "extraDependencies" : {
          "description" : "Extra dependencies",
          "$ref" : "#/definitions/Extra dependencies"
        },
        "firstTry" : {
          "type" : "boolean",
          "description" : "Whether this task has been tried before or not"
        },
        "keyspace" : {
          "type" : "string",
          "description" : "Key space"
        },
        "tableName" : {
          "type" : "string",
          "description" : "Table name"
        },
        "tableUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Table UUID"
        },
        "sse" : {
          "type" : "boolean",
          "description" : "Is SSE"
        },
        "storageConfigUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Storage config uuid"
        },
        "kmsConfigUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "KMS config uuid"
        },
        "storageLocation" : {
          "type" : "string",
          "description" : "Storage location"
        },
        "actionType" : {
          "type" : "string",
          "description" : "Action type",
          "enum" : [ "CREATE", "RESTORE", "RESTORE_KEYS", "DELETE" ]
        },
        "backupType" : {
          "type" : "string",
          "description" : "Backup type",
          "enum" : [ "YQL_TABLE_TYPE", "REDIS_TABLE_TYPE", "PGSQL_TABLE_TYPE", "TRANSACTION_STATUS_TABLE_TYPE" ]
        },
        "tableNameList" : {
          "type" : "array",
          "description" : "Tables",
          "items" : {
            "type" : "string"
          }
        },
        "tableUUIDList" : {
          "type" : "array",
          "description" : "Table UUID List",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "backupList" : {
          "type" : "array",
          "description" : "Backups",
          "items" : {
            "$ref" : "#/definitions/Backup Table Params"
          }
        },
        "schedulingFrequency" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Frequency for running the backup in milliseconds"
        },
        "cronExpression" : {
          "type" : "string",
          "description" : "Cron expression in case a recurring backup"
        },
        "timeBeforeDelete" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time in millisecs before deleting the backup from the storage"
        },
        "enableVerboseLogs" : {
          "type" : "boolean",
          "description" : "Is verbose logging is enable"
        },
        "transactionalBackup" : {
          "type" : "boolean",
          "description" : "Is backup be transactional across tables"
        },
        "parallelism" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of concurrent commands to run on nodes over SSH"
        },
        "scheduleUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Schedule UUID"
        },
        "customerUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Customer uuid"
        }
      },
      "description" : "Backup Table Params"
    },
    "Customer" : {
      "type" : "object",
      "required" : [ "code", "creationDate", "customerId", "features", "name", "universeUUIDs", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "features" : {
          "$ref" : "#/definitions/JsonNode"
        },
        "universeUUIDs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "customerId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "JsonNode" : {
      "type" : "object",
      "required" : [ "array", "bigDecimal", "bigInteger", "binary", "boolean", "containerNode", "double", "float", "floatingPointNumber", "int", "integralNumber", "long", "missingNode", "nodeType", "null", "number", "object", "pojo", "short", "textual", "valueNode" ],
      "properties" : {
        "nodeType" : {
          "type" : "string",
          "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
        },
        "object" : {
          "type" : "boolean"
        },
        "valueNode" : {
          "type" : "boolean"
        },
        "containerNode" : {
          "type" : "boolean"
        },
        "missingNode" : {
          "type" : "boolean"
        },
        "pojo" : {
          "type" : "boolean"
        },
        "number" : {
          "type" : "boolean"
        },
        "integralNumber" : {
          "type" : "boolean"
        },
        "floatingPointNumber" : {
          "type" : "boolean"
        },
        "short" : {
          "type" : "boolean"
        },
        "int" : {
          "type" : "boolean"
        },
        "long" : {
          "type" : "boolean"
        },
        "double" : {
          "type" : "boolean"
        },
        "bigDecimal" : {
          "type" : "boolean"
        },
        "bigInteger" : {
          "type" : "boolean"
        },
        "textual" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "binary" : {
          "type" : "boolean"
        },
        "array" : {
          "type" : "boolean"
        },
        "null" : {
          "type" : "boolean"
        },
        "float" : {
          "type" : "boolean"
        }
      }
    },
    "CustomerLoginFormData" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "NodeInstance" : {
      "type" : "object",
      "required" : [ "details" ],
      "properties" : {
        "nodeUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Node instance UUID",
          "readOnly" : true
        },
        "instanceTypeCode" : {
          "type" : "string",
          "example" : "c5large",
          "description" : "Node instance type code"
        },
        "nodeName" : {
          "type" : "string",
          "example" : "India node",
          "description" : "Node instance node name"
        },
        "instanceName" : {
          "type" : "string",
          "example" : "Mumbai instance",
          "description" : "Node instance instance name"
        },
        "zoneUuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Node instance zone UUID"
        },
        "inUse" : {
          "type" : "boolean",
          "description" : "Node instance is in used or not"
        },
        "details" : {
          "$ref" : "#/definitions/NodeInstanceData"
        },
        "detailsJson" : {
          "type" : "string",
          "example" : "{\"ip\":\"1.1.1.1\",\"sshUser\":\"centos\"}",
          "description" : "Node details"
        }
      },
      "description" : "Node instance attched to provider and zones"
    },
    "NodeInstanceData" : {
      "type" : "object",
      "properties" : {
        "ip" : {
          "type" : "string",
          "example" : "1.1.1.1",
          "description" : "IP address of node instance"
        },
        "sshUser" : {
          "type" : "string",
          "example" : "centos",
          "description" : "SSH user of node instance"
        },
        "region" : {
          "type" : "string",
          "example" : "south-east",
          "description" : "Region of node instance"
        },
        "zone" : {
          "type" : "string",
          "example" : "south-east",
          "description" : "Zone of node instance"
        },
        "instanceType" : {
          "type" : "string",
          "example" : "c5large",
          "description" : "Instance type of node instance"
        },
        "instanceName" : {
          "type" : "string",
          "example" : "Mumbai instance",
          "description" : "Instance name of node instance"
        },
        "nodeName" : {
          "type" : "string",
          "example" : "India node",
          "description" : "Node name of node instance"
        }
      },
      "description" : "Detail of node instance"
    },
    "NodeInstanceFormData" : {
      "type" : "object",
      "required" : [ "nodes" ],
      "properties" : {
        "nodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NodeInstanceData"
          }
        }
      }
    },
    "NodeActionFormData" : {
      "type" : "object",
      "required" : [ "nodeAction" ],
      "properties" : {
        "nodeAction" : {
          "type" : "string",
          "enum" : [ "ADD", "REMOVE", "START", "STOP", "DELETE", "QUERY", "RELEASE", "START_MASTER" ]
        }
      }
    },
    "ArrayNode" : {
      "type" : "object",
      "required" : [ "array", "bigDecimal", "bigInteger", "binary", "boolean", "containerNode", "double", "float", "floatingPointNumber", "int", "integralNumber", "long", "missingNode", "nodeType", "null", "number", "object", "pojo", "short", "textual", "valueNode" ],
      "properties" : {
        "nodeType" : {
          "type" : "string",
          "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
        },
        "array" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "boolean"
        },
        "valueNode" : {
          "type" : "boolean"
        },
        "containerNode" : {
          "type" : "boolean"
        },
        "missingNode" : {
          "type" : "boolean"
        },
        "pojo" : {
          "type" : "boolean"
        },
        "number" : {
          "type" : "boolean"
        },
        "integralNumber" : {
          "type" : "boolean"
        },
        "floatingPointNumber" : {
          "type" : "boolean"
        },
        "short" : {
          "type" : "boolean"
        },
        "int" : {
          "type" : "boolean"
        },
        "long" : {
          "type" : "boolean"
        },
        "double" : {
          "type" : "boolean"
        },
        "bigDecimal" : {
          "type" : "boolean"
        },
        "bigInteger" : {
          "type" : "boolean"
        },
        "textual" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "binary" : {
          "type" : "boolean"
        },
        "null" : {
          "type" : "boolean"
        },
        "float" : {
          "type" : "boolean"
        }
      }
    },
    "CertificateInfo" : {
      "type" : "object",
      "required" : [ "certType", "certificate", "checksum", "customCertInfo", "customerUUID", "expiryDate", "inUse", "label", "privateKey", "startDate", "universeDetails", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "customerUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "label" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiryDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "privateKey" : {
          "type" : "string"
        },
        "certificate" : {
          "type" : "string"
        },
        "certType" : {
          "type" : "string",
          "enum" : [ "SelfSigned", "CustomCertHostPath" ]
        },
        "checksum" : {
          "type" : "string"
        },
        "customCertInfo" : {
          "$ref" : "#/definitions/CustomCertInfo"
        },
        "inUse" : {
          "type" : "boolean"
        },
        "universeDetails" : {
          "$ref" : "#/definitions/ArrayNode"
        }
      }
    },
    "CustomCertInfo" : {
      "type" : "object",
      "required" : [ "clientCertPath", "clientKeyPath", "nodeCertPath", "nodeKeyPath", "rootCertPath" ],
      "properties" : {
        "nodeCertPath" : {
          "type" : "string"
        },
        "nodeKeyPath" : {
          "type" : "string"
        },
        "rootCertPath" : {
          "type" : "string"
        },
        "clientCertPath" : {
          "type" : "string"
        },
        "clientKeyPath" : {
          "type" : "string"
        }
      }
    },
    "EditProviderRequest" : {
      "type" : "object",
      "required" : [ "config", "hostedZoneId" ],
      "properties" : {
        "hostedZoneId" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "KubernetesProviderFormData" : {
      "type" : "object",
      "required" : [ "code", "config", "name", "region", "regionList" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "enum" : [ "unknown", "aws", "gcp", "azu", "docker", "onprem", "kubernetes", "local", "other" ]
        },
        "name" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "region" : {
          "type" : "string"
        },
        "regionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RegionData"
          }
        }
      }
    },
    "RegionData" : {
      "type" : "object",
      "required" : [ "code", "config", "latitude", "longitude", "name", "zoneList" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        },
        "zoneList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ZoneData"
          }
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ZoneData" : {
      "type" : "object",
      "required" : [ "code", "config", "name" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "About Yugabyte Platform",
    "url" : "https://docs.yugabyte.com"
  }
}